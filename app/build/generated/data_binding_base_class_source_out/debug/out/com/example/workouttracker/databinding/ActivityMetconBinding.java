// Generated by view binder compiler. Do not edit!
package com.example.workouttracker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.workouttracker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMetconBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnComplete;

  @NonNull
  public final Button btnReset;

  @NonNull
  public final Button btnStartStop;

  @NonNull
  public final ImageView ivBack;

  @NonNull
  public final LinearLayout layoutControls;

  @NonNull
  public final LinearLayout layoutHeader;

  @NonNull
  public final LinearLayout layoutMetconExercises;

  @NonNull
  public final ScrollView scrollExercises;

  @NonNull
  public final TextView tvLastTime;

  @NonNull
  public final TextView tvTimer;

  @NonNull
  public final TextView tvWorkoutTitle;

  private ActivityMetconBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnComplete,
      @NonNull Button btnReset, @NonNull Button btnStartStop, @NonNull ImageView ivBack,
      @NonNull LinearLayout layoutControls, @NonNull LinearLayout layoutHeader,
      @NonNull LinearLayout layoutMetconExercises, @NonNull ScrollView scrollExercises,
      @NonNull TextView tvLastTime, @NonNull TextView tvTimer, @NonNull TextView tvWorkoutTitle) {
    this.rootView = rootView;
    this.btnComplete = btnComplete;
    this.btnReset = btnReset;
    this.btnStartStop = btnStartStop;
    this.ivBack = ivBack;
    this.layoutControls = layoutControls;
    this.layoutHeader = layoutHeader;
    this.layoutMetconExercises = layoutMetconExercises;
    this.scrollExercises = scrollExercises;
    this.tvLastTime = tvLastTime;
    this.tvTimer = tvTimer;
    this.tvWorkoutTitle = tvWorkoutTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMetconBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMetconBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_metcon, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMetconBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnComplete;
      Button btnComplete = ViewBindings.findChildViewById(rootView, id);
      if (btnComplete == null) {
        break missingId;
      }

      id = R.id.btnReset;
      Button btnReset = ViewBindings.findChildViewById(rootView, id);
      if (btnReset == null) {
        break missingId;
      }

      id = R.id.btnStartStop;
      Button btnStartStop = ViewBindings.findChildViewById(rootView, id);
      if (btnStartStop == null) {
        break missingId;
      }

      id = R.id.ivBack;
      ImageView ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.layoutControls;
      LinearLayout layoutControls = ViewBindings.findChildViewById(rootView, id);
      if (layoutControls == null) {
        break missingId;
      }

      id = R.id.layoutHeader;
      LinearLayout layoutHeader = ViewBindings.findChildViewById(rootView, id);
      if (layoutHeader == null) {
        break missingId;
      }

      id = R.id.layoutMetconExercises;
      LinearLayout layoutMetconExercises = ViewBindings.findChildViewById(rootView, id);
      if (layoutMetconExercises == null) {
        break missingId;
      }

      id = R.id.scrollExercises;
      ScrollView scrollExercises = ViewBindings.findChildViewById(rootView, id);
      if (scrollExercises == null) {
        break missingId;
      }

      id = R.id.tvLastTime;
      TextView tvLastTime = ViewBindings.findChildViewById(rootView, id);
      if (tvLastTime == null) {
        break missingId;
      }

      id = R.id.tvTimer;
      TextView tvTimer = ViewBindings.findChildViewById(rootView, id);
      if (tvTimer == null) {
        break missingId;
      }

      id = R.id.tvWorkoutTitle;
      TextView tvWorkoutTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvWorkoutTitle == null) {
        break missingId;
      }

      return new ActivityMetconBinding((ConstraintLayout) rootView, btnComplete, btnReset,
          btnStartStop, ivBack, layoutControls, layoutHeader, layoutMetconExercises,
          scrollExercises, tvLastTime, tvTimer, tvWorkoutTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
